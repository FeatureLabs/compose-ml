version: 2.1

executors:
  python:
    parameters:
      version:
        type: string
        default: "3.7"

    docker:
      - image: circleci/python:<< parameters.version >>

commands:
  build_package:
    steps:
      - run:
          name: "Build the source distribution to install the package."
          command: |
            python setup.py sdist
            PACKAGE=$(python setup.py --fullname)
            tar -zxvf "dist/${PACKAGE}.tar.gz"
            mv $PACKAGE package

  installation:
    parameters:
      test_requirements:
        type: boolean
        default: false

    steps:
      - checkout
      - build_package
      - run:
          name: "Create a virtual environment and install the requirements to use the package."
          command: |
            virtualenv env -q
            source env/bin/activate
            pip config --site set global.progress_bar off
            pip install package/

      - when:
          condition: << parameters.test_requirements >>
          steps:
            - run:
                name: "Install the requirements to test the package."
                command: |
                  source env/bin/activate
                  pip install -r package/test-requirements.txt

jobs:
  lint_tests:
    parameters:
      python_version:
        type: string
        default: "3.7"

    executor:
      name: python
      version: << parameters.python_version >>

    steps:
      - installation:
          test_requirements: true

      - run:
          name: "Run lint tests."
          command: |
            source env/bin/activate
            cd package
            make lint-tests -f ../Makefile

  unit_tests:
    parameters:
      python_version:
        type: string
        default: "3.7"

      codecov:
        type: boolean
        default: false

    executor:
      name: python
      version: << parameters.python_version >>

    steps:
      - installation:
          test_requirements: true

      - when:
          name: "Run unit tests with code coverage."
          condition: << parameters.codecov >>
          steps:
            - run: |
                source env/bin/activate
                cd package
                make unit-tests ADDOPTS="--cov=composeml" -f ../Makefile
                codecov --root ..

      - unless:
          condition: << parameters.codecov >>
          steps:
            - run: |
                source env/bin/activate
                cd package
                make unit-tests -f ../Makefile

workflows:
  version: 2
  "Integration Tests":
    jobs:
      - lint_tests:
          name: "Lint Tests - Python 3.6"
          python_version: "3.6"

      - lint_tests:
          name: "Lint Tests - Python 3.7"
          python_version: "3.7"

      - lint_tests:
          name: "Lint Tests - Python 3.8"
          python_version: "3.8"

      - unit_tests:
          name: "Unit Tests - Python 3.6"
          python_version: "3.6"

      - unit_tests:
          name: "Unit Tests - Python 3.7"
          python_version: "3.7"

      - unit_tests:
          name: "Unit Tests - Python 3.8"
          python_version: "3.8"
          codecov: true
